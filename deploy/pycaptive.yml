# PyCaptive is not a common network service: it depends on other services.
#
# It has a port for listening to requests, defined on the Web Server (Nginx),
# which is detecting the Captive Portal requests, thanks to a set of rules
# defined at Firewall level (Iptables), then directioning the requests for a
# WSGI Server (Gunicorn), which is serving PyCaptive app. All authentication
# attempts are validated on PyCaptive's Database (MongoDB), and if they are
# successful, sessions will be recorded on the Database, considering username
# and its IP address, used on the Firewall for granting Internet access for
# this IP address (device), for a certain period of time. Passing this period,
# PyCaptive will revoke the access, eliminating the firewall rule that grants
# Internet access for the IP address of the device where the user authenticated.
#
# As you can see, PyCaptive is a Captive Portal, and for this role, it depends
# on other services. Besides the Captive Portal role, it can be a authentication
# portal for an entire network (wired, wireless or mixed), also providing
# authentication services for networks that require Transparent Proxy services.

config_generator:
    # These settings only have effect when running 'config_generator.py'. If you
    # have a simple Firewall Router, set 'mode' as '1'. If you have a Firewall
    # Router and also a Transparent Proxy on the same box, set 'mode' as '2'.
    mode: 1
    http: 80
    https: 443
    ssh: 22
    dns: 53
    dns_rndc: 953
    dhcp_server: 67
    dhcp_client: 68
    proxy: 3128
    captive_portal_detection: 14901
    pycaptive: 14900

iptables:
    # PyCaptive 'magic' is based on IPTABLES rules. These settings cause direct
    # impact on PyCaptive operation. Modify these settings, only if you really
    # know what you're doing (be careful).
    iptables: /sbin/iptables
    conntrack: /usr/sbin/conntrack
    table: mangle
    chain: PREROUTING
    jump: INTERNET
    rule_comment: Added via PyCaptive
    # Settings used for testing PyCaptive.
    # Change these values, according with the settings of your NICs (LAN and WAN).
    lan_nic: lo
    lan_ip: 127.0.0.1
    lan_network: 127.0.0.0/8
    wan_nic: lo
    
logging:
    # Log rotation could be performed on Monday (W0) or on Sunday (W7), defining
    # retention based on numbers of weeks.
    rotate_when: W6
    rotate_count: 12
    file: /var/log/pycaptive/pycaptive.log

database:
    # The duration of the Internet Access is defined in seconds, for all users. 
    user: &user mongo
    pass: &pass mongo
    address: &addr 127.0.0.1
    port: &port 27017
    uri: mongodb://*user:*pass@*addr:*port
    session_duration: 300

scheduler:
    # PyCaptive has its own scheduler, in charge of verifying expired sessions, and
    # the interval between verifications, is expressed in seconds.
    interval: 60
